[package]
authors = ["Selendra <nath@selendra.org>"]
build = 'build.rs'
description = 'A fresh FRAME-based Substrate node, ready for hacking.'
edition = '2018'
name = 'node-template'
version = '2.0.0'

[[bin]]
name = 'node-template'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[build-dependencies]
substrate-build-script-utils = '2.0.0'

[dependencies]
codec = { package = "parity-scale-codec", version = "1.3.4" }
jsonrpc-core = '15.0.0'
structopt = '0.3.8'
serde = { version = "1.0.102", features = ["derive"] }
futures = { version = "0.3.1", features = ["compat"] }
derive_more = "0.99"
log = "0.4.8"
thiserror = "1.0.21"

# local dependencies
node-indracore-runtime = { path = '../../runtime/indracore', version = '2.0.0' }
runtime-parachains = { package = "indracore-runtime-parachains", path = "../../runtime/parachains"}

# Substrate dependencies
frame-benchmarking = { path = "../../substrate/frame/benchmarking" }
pallet-transaction-payment-rpc = { path = "../../substrate/frame/transaction-payment/rpc" }
pallet-im-online = { path = "../../substrate/frame/im-online" }

frame-benchmarking-cli = { path = "../../substrate/utils/frame/benchmarking-cli" }
substrate-frame-rpc-system = { path = "../../substrate/utils/frame/rpc/system" }

sp-api = { path = "../../substrate/primitives/api" }
sp-block-builder = { path = "../../substrate/primitives/block-builder" }
sp-blockchain = { path = "../../substrate/primitives/blockchain" }
sp-consensus = { path = "../../substrate/primitives/consensus/common" }
sp-core = { path = "../../substrate/primitives/core" }
sp-inherents = { path = "../../substrate/primitives/inherents" }
sp-runtime = { path = "../../substrate/primitives/runtime" }
sp-transaction-pool = { path = "../../substrate/primitives/transaction-pool" }
sp-finality-grandpa = { path = "../../substrate/primitives/finality-grandpa" }
sp-authority-discovery = { path = "../../substrate/primitives/authority-discovery" }
sp-consensus-babe = { path = "../../substrate/primitives/consensus/babe" }
sp-keystore = { path = "../../substrate/primitives/keystore" }

sc-basic-authorship = { path = "../../substrate/client/basic-authorship" }
sc-client-api = { path = "../../substrate/client/api" }
sc-consensus = { path = "../../substrate/client/consensus/common" }
sc-chain-spec = { path = "../../substrate/client/chain-spec" }
sc-rpc = { path = "../../substrate/client/rpc" }
sc-rpc-api = { path = "../../substrate/client/rpc-api" }
sc-transaction-pool = { path = "../../substrate/client/transaction-pool" }
sc-keystore = { path = "../../substrate/client/keystore" }
sc-network = { path = "../../substrate/client/network" }
sc-consensus-babe = { path = "../../substrate/client/consensus/babe" }
sc-consensus-babe-rpc = { path = "../../substrate/client/consensus/babe/rpc" }
sc-consensus-epochs = { path = "../../substrate/client/consensus/epochs" }
sc-authority-discovery = { path = "../../substrate/client/authority-discovery" }
sc-cli = { features = ['wasmtime'], path = "../../substrate/client/cli" }
sc-consensus-slots = {path = "../../substrate/client/consensus/slots"}
sc-executor = { features = ['wasmtime'], path = "../../substrate/client/executor" }
sc-service = { features = ['wasmtime'], path = "../../substrate/client/service" }
telemetry = { package = "sc-telemetry", path = "../../substrate/client/telemetry" }
grandpa = { package = "sc-finality-grandpa", path = "../../substrate/client/finality-grandpa"}
sc-finality-grandpa-rpc = { path = "../../substrate/client/finality-grandpa/rpc" }
sc-sync-state-rpc = { path = "../../substrate/client/sync-state-rpc" }

node-executor = {path = "../executor"}
node-inspect = { path = "../inspect"}
primitives = { package = 'indracore-primitives', path = "../../primitives"}

[features]
default = []
runtime-benchmarks = ['node-indracore-runtime/runtime-benchmarks']
