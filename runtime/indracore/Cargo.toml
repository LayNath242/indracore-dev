[package]
name = "indracore-runtime"
version = "0.2.0"
authors = ["Selendra <info@selendra.org>"]
edition = "2018"
build = "build.rs"

[dependencies]
bitvec = { version = "0.17.4", default-features = false, features = ["alloc"] }
parity-scale-codec = { version = "1.3.5", default-features = false, features = ["derive"] }
log = { version = "0.4.11", optional = true }
rustc-hex = { version = "2.1.0", default-features = false }
serde = { version = "1.0.118", default-features = false }
serde_derive = { version = "1.0.117", optional = true }
static_assertions = "1.1.0"
smallvec = "1.5.1"
hex-literal = { version = "0.3.1", optional = true }

authority-discovery-primitives = { package = "sp-authority-discovery", path = "../../substrate/primitives/authority-discovery", default-features = false }
inherents = { package = "sp-inherents", path = "../../substrate/primitives/inherents", default-features = false }
babe-primitives = { package = "sp-consensus-babe", path = "../../substrate/primitives/consensus/babe", default-features = false }
offchain-primitives = { package = "sp-offchain", path = "../../substrate/primitives/offchain", default-features = false }
tx-pool-api = { package = "sp-transaction-pool", path = "../../substrate/primitives/transaction-pool", default-features = false }
block-builder-api = { package = "sp-block-builder", path = "../../substrate/primitives/block-builder", default-features = false }

sp-api = { path = "../../substrate/primitives/api", default-features = false }
sp-std = { path = "../../substrate/primitives/std", default-features = false }
sp-io = { path = "../../substrate/primitives/io", default-features = false }
sp-runtime = { path = "../../substrate/primitives/runtime", default-features = false }
sp-staking = { path = "../../substrate/primitives/staking", default-features = false }
sp-core = { path = "../../substrate/primitives/core", default-features = false }
sp-session = { path = "../../substrate/primitives/session", default-features = false }
sp-version = { path = "../../substrate/primitives/version", default-features = false }

frame-benchmarking = { path = "../../substrate/frame/benchmarking", default-features = false, optional = true }
frame-system-benchmarking = { path = "../../substrate/frame/system/benchmarking", default-features = false, optional = true }
frame-support = { path = "../../substrate/frame/support", default-features = false }
frame-system = {path = "../../substrate/frame/system", default-features = false }
frame-system-rpc-runtime-api = { path = "../../substrate/frame/system/rpc/runtime-api", default-features = false }
frame-executive = { path = "../../substrate/frame/executive", default-features = false }
pallet-authority-discovery = { path = "../../substrate/frame/authority-discovery", default-features = false }
pallet-authorship = { path = "../../substrate/frame/authorship", default-features = false }
pallet-babe = { path = "../../substrate/frame/babe", default-features = false }
pallet-balances = { path = "../../substrate/frame/balances", default-features = false }
pallet-bounties = { path = "../../substrate/frame/bounties", default-features = false }
pallet-transaction-payment = { path = "../../substrate/frame/transaction-payment", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { path = "../../substrate/frame/transaction-payment/rpc/runtime-api", default-features = false }
pallet-collective = { path = "../../substrate/frame/collective", default-features = false }
pallet-democracy = { path = "../../substrate/frame/democracy", default-features = false }
pallet-elections-phragmen = { path = "../../substrate/frame/elections-phragmen", default-features = false }
pallet-grandpa = { path = "../../substrate/frame/grandpa", default-features = false }
pallet-identity = { path = "../../substrate/frame/identity", default-features = false }
pallet-im-online = { path = "../../substrate/frame/im-online", default-features = false }
pallet-indices = { path = "../../substrate/frame/indices", default-features = false }
pallet-membership = { path = "../../substrate/frame/membership", default-features = false }
pallet-multisig = { path = "../../substrate/frame/multisig", default-features = false }
pallet-nicks = { path = "../../substrate/frame/nicks", default-features = false }
pallet-offences = { path = "../../substrate/frame/offences", default-features = false }
pallet-proxy = { path = "../../substrate/frame/proxy", default-features = false }
pallet-randomness-collective-flip = { path = "../../substrate/frame/randomness-collective-flip", default-features = false }
pallet-scheduler = { path = "../../substrate/frame/scheduler", default-features = false }
pallet-session = { path = "../../substrate/frame/session", default-features = false }
pallet-staking = { path = "../../substrate/frame/staking", default-features = false }
pallet-staking-reward-curve = { path = "../../substrate/frame/staking/reward-curve" }
pallet-timestamp = { path = "../../substrate/frame/timestamp", default-features = false }
pallet-tips = { path = "../../substrate/frame/tips", default-features = false }
pallet-treasury = { path = "../../substrate/frame/treasury", default-features = false }
pallet-vesting = { path = "../../substrate/frame/vesting", default-features = false }
pallet-utility = { path = "../../substrate/frame/utility", default-features = false }
pallet-offences-benchmarking = { path = "../../substrate/frame/offences/benchmarking", default-features = false, optional = true }
pallet-session-benchmarking = { path = "../../substrate/frame/session/benchmarking", default-features = false, optional = true }
pallet-contracts = { path = "../../substrate/frame/contracts", default_features = false }
pallet-contracts-primitives = { path = "../../substrate/frame/contracts/common", default_features = false }
pallet-contracts-rpc-runtime-api = { path = "../../substrate/frame/contracts/rpc/runtime-api", default_features = false }

runtime-common = { package = "indracore-runtime-common", path = "../common", default-features = false }
primitives = { package = "indracore-primitives", path = "../../primitives", default-features = false }

[dev-dependencies]
hex-literal = "0.3.1"
libsecp256k1 = "0.3.5"
tiny-keccak = "2.0.2"
trie-db = "0.22.1"
serde_json = "1.0.61"

keyring = { package = "sp-keyring", path = "../../substrate/primitives/keyring" }
sp-trie = { path = "../../substrate/primitives/trie" }

[build-dependencies]
substrate-wasm-builder = "3.0.0"

[features]
default = ["std"]
no_std = []
only-staking = []
std = [
	"authority-discovery-primitives/std",
	"pallet-authority-discovery/std",
	"bitvec/std",
	"primitives/std",
	"rustc-hex/std",
	"parity-scale-codec/std",
	"inherents/std",
	"sp-core/std",
	"sp-api/std",
	"tx-pool-api/std",
	"block-builder-api/std",
	"offchain-primitives/std",
	"sp-std/std",
	"frame-support/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-bounties/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-collective/std",
	"pallet-elections-phragmen/std",
	"pallet-democracy/std",
	"frame-executive/std",
	"pallet-grandpa/std",
	"pallet-identity/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"pallet-membership/std",
	"pallet-multisig/std",
	"pallet-nicks/std",
	"pallet-offences/std",
	"pallet-proxy/std",
	"sp-runtime/std",
	"sp-staking/std",
	"pallet-scheduler/std",
	"pallet-session/std",
	"pallet-staking/std",
	"frame-system/std",
	"frame-system-rpc-runtime-api/std",
	"pallet-timestamp/std",
	"pallet-treasury/std",
	"pallet-tips/std",
	"sp-version/std",
	"serde_derive",
	"serde/std",
	"log",
	"pallet-babe/std",
	"babe-primitives/std",
	"sp-session/std",
	"pallet-randomness-collective-flip/std",
	"runtime-common/std",
	"pallet-vesting/std",
	"pallet-utility/std",
	'pallet-contracts/std',
    'pallet-contracts-primitives/std',
	"pallet-contracts-rpc-runtime-api/std",
]
runtime-benchmarks = [
	"runtime-common/runtime-benchmarks",
	"frame-benchmarking",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-elections-phragmen/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-tips/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"pallet-offences-benchmarking",
	"pallet-session-benchmarking",
	"frame-system-benchmarking",
	"hex-literal",
	"pallet-contracts/runtime-benchmarks",
]

# When enabled, the runtime api will not be build.
#
# This is required by Cumulus to access certain types of the
# runtime without clashing with the runtime api exported functions
# in WASM.
disable-runtime-api = []
